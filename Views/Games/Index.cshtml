@using GoFish.Models

<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Go Fish!</title>
    <link 
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" 
      rel="stylesheet" 
      integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" 
      crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="~/css/styles.css">
  </head>
  <body class="container">
    <h1>@Model.Name</h1>
    @* <p>Game automatically resolves initial pairs and draws Cards to minimum hand size of five.</p> *@
    <hr>

    <form action="/reset-game" method="POST">
      <button type="submit">Reset Game</button>
    </form>    

    @* Player Two section *@
    <h4 class="center">Player 2 Pairs: @Model.Player2.Pairs</h4>
    <div class="player-card-display">
      @foreach(Card card in @Model.Player2.Hand)
      {
        var buttonText = Model.CurrentPlayer.Equals("Player2") ? $"{card.Value} of {card.Suit}" : "Hidden";
        var disableButton = Model.CurrentPlayerDrawCard || !Model.CurrentPlayer.Equals("Player2");
        <form action="/take-turn" method="POST">
          <input type="text" name="cardValue"  id="cardValue" value="@card.Value" hidden>
          <input type="text" name="cardSuit" id="cardSuit" value="@card.Suit" hidden>
          <button type="submit" disabled="@disableButton">@buttonText</button>
        </form>
      }
    </div>

    @* Draw card section *@
    @if(@Model.CurrentPlayerDrawCard)
    {
      <form action="/draw" method="POST" class="deck">
        <button type="submit">Draw Card (@Model.Deck.ShuffledCards.Count Cards remaining)</button>
      </form>
    }
    else
    {
      <form action="/draw" method="POST" class="deck">
        <button type="submit" disabled>Draw Card (@Model.Deck.ShuffledCards.Count Cards remaining)</button>
      </form>
    }

    @* Player One section *@
    <h4 class="center">Player 1 Pairs: @Model.Player1.Pairs</h4>
    <div class="player-card-display">
      @foreach(Card card in @Model.Player1.Hand)
      {
        var buttonText = Model.CurrentPlayer.Equals("Player1") ? $"{card.Value} of {card.Suit}" : "Hidden";
        var disableButton = Model.CurrentPlayerDrawCard || !Model.CurrentPlayer.Equals("Player1");
        <form action="/take-turn" method="POST">
          <input type="text" name="cardValue"  id="cardValue" value="@card.Value" hidden>
          <input type="text" name="cardSuit" id="cardSuit" value="@card.Suit" hidden>
          <button type="submit" disabled="@disableButton">@buttonText</button>
        </form>
      }
    </div>
  </body>
</html>